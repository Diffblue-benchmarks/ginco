package fr.mcc.ginco.extjs.view.utils;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.notNullValue;
import static org.hamcrest.core.Is.is;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import fr.mcc.ginco.beans.Language;
import fr.mcc.ginco.beans.ThesaurusConceptGroupLabel;
import fr.mcc.ginco.extjs.view.pojo.ThesaurusConceptGroupView;
import fr.mcc.ginco.services.ILanguagesService;
import fr.mcc.ginco.services.IThesaurusConceptGroupLabelService;

import java.util.Date;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

/**
 * Unit tests for fr.mcc.ginco.extjs.view.utils.ThesaurusConceptGroupLabelViewConverter
 *
 * @author Diffblue Cover
 */

@ContextConfiguration(classes =
	 {ThesaurusConceptGroupLabelViewConverter.class})
@ExtendWith(SpringExtension.class)
class ThesaurusConceptGroupLabelViewConverterTest {

	@MockBean(name = "languagesService")
	private ILanguagesService languagesService;

	@MockBean(name = "thesaurusConceptGroupLabelService")
	private IThesaurusConceptGroupLabelService thesaurusConceptGroupLabelService;

	@Autowired
	private ThesaurusConceptGroupLabelViewConverter service;

	@Test
	void convert() {
		ThesaurusConceptGroupLabel thesaurusConceptGroupLabel =
			 mock(ThesaurusConceptGroupLabel.class);
		when(thesaurusConceptGroupLabelService.getById(Mockito.<Integer>any()))
			.thenReturn(thesaurusConceptGroupLabel);
		when(languagesService.getLanguageById(Mockito.<String>any()))
			.thenReturn(new Language());
		ThesaurusConceptGroupView thesaurusConceptGroupViewJAXBElement =
			 new ThesaurusConceptGroupView();
		thesaurusConceptGroupViewJAXBElement.setGroupConceptLabelId(1);
		thesaurusConceptGroupViewJAXBElement.setLabel("label");
		assertThat(service.convert(thesaurusConceptGroupViewJAXBElement), is(notNullValue()));
		Mockito.verify(thesaurusConceptGroupLabel).setLanguage(Mockito.<Language>any());
		Mockito.verify(thesaurusConceptGroupLabel).setLexicalValue(Mockito.eq("label"));
		Mockito.verify(thesaurusConceptGroupLabel).setModified(Mockito.<Date>any());
	}
}

package fr.mcc.ginco.extjs.view.utils;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.empty;

import fr.mcc.ginco.ark.IIDGeneratorService;
import fr.mcc.ginco.beans.ThesaurusArray;
import fr.mcc.ginco.services.INodeLabelService;
import fr.mcc.ginco.services.IThesaurusArrayService;
import fr.mcc.ginco.services.IThesaurusConceptService;
import fr.mcc.ginco.services.IThesaurusService;

import java.util.ArrayList;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

/**
 * Unit tests for fr.mcc.ginco.extjs.view.utils.ThesaurusArrayViewConverter
 *
 * @author Diffblue Cover
 */

@ContextConfiguration(classes = {ThesaurusArrayViewConverter.class})
@ExtendWith(SpringExtension.class)
class ThesaurusArrayViewConverterTest {

	@MockBean(name = "generatorService")
	private IIDGeneratorService generatorService;

	@MockBean(name = "nodeLabelService")
	private INodeLabelService nodeLabelService;

	@MockBean(name = "thesaurusArrayService")
	private IThesaurusArrayService thesaurusArrayService;

	@MockBean(name = "thesaurusConceptService")
	private IThesaurusConceptService thesaurusConceptService;

	@MockBean(name = "thesaurusService")
	private IThesaurusService thesaurusService;

	@Autowired
	private ThesaurusArrayViewConverter service;

	@Test
	void convertArraysIsEmptyReturnsEmpty() {
		assertThat(service.convert(new ArrayList<ThesaurusArray>()), empty());
	}
}

package fr.mcc.ginco.rest.services;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.hasSize;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.core.Is.is;
import static org.hamcrest.core.IsSame.sameInstance;
import static org.mockito.Mockito.when;

import fr.mcc.ginco.beans.AssociativeRelationshipRole;
import fr.mcc.ginco.extjs.view.ExtJsonFormLoadData;
import fr.mcc.ginco.services.IAssociativeRelationshipRoleService;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

/**
 * Unit tests for fr.mcc.ginco.rest.services.AssociationRoleRestService
 *
 * @author Diffblue Cover
 */

@ContextConfiguration(classes = {AssociationRoleRestService.class})
@ExtendWith(SpringExtension.class)
class AssociationRoleRestServiceTest {

	@MockBean(name = "associativeRelationshipRoleService")
	private IAssociativeRelationshipRoleService associativeRelationshipRoleService;

	@Autowired
	private AssociationRoleRestService service;

	@Test
	void getAllRoles() {

		// arrange
		ArrayList<AssociativeRelationshipRole> associativeRelationshipRoleList =
			 new ArrayList<AssociativeRelationshipRole>();
		AssociativeRelationshipRole associativeRelationshipRole =
			 new AssociativeRelationshipRole();
		associativeRelationshipRoleList.add(associativeRelationshipRole);
		when(associativeRelationshipRoleService.getAllAssociationTermRole())
			.thenReturn(associativeRelationshipRoleList);

		// act
		ExtJsonFormLoadData<List<AssociativeRelationshipRole>> result =
			 service.getAllRoles();

		// assert
		assertThat(result.getData(), hasSize(1));
		assertThat(result.getData().get(0), sameInstance(associativeRelationshipRole));
		assertThat(result.getTotal(), is(nullValue()));
		assertThat(result.isSuccess(), is(true));
	}
}

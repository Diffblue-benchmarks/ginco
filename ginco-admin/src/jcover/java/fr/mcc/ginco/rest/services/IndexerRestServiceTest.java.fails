package fr.mcc.ginco.rest.services;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.anEmptyMap;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.core.Is.is;

import fr.mcc.ginco.solr.IIndexerService;

import javax.ws.rs.core.Response;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

/**
 * Unit tests for fr.mcc.ginco.rest.services.IndexerRestService
 *
 * @author Diffblue Cover
 */

@ContextConfiguration(classes = {IndexerRestService.class})
@ExtendWith(SpringExtension.class)
class IndexerRestServiceTest {

	@MockBean(name = "indexerService")
	private IIndexerService indexerService;

	@Autowired
	private IndexerRestService service;

	@Test
	void forceIndexation() throws fr.mcc.ginco.exceptions.TechnicalException {
		Response result = service.forceIndexation();
		assertThat(result.getCookies(), anEmptyMap());
		assertThat(result.getMediaType(), is(nullValue()));
		assertThat(result.getStatus(), is(200));
		Mockito.verify(indexerService).forceIndexing();
	}
}

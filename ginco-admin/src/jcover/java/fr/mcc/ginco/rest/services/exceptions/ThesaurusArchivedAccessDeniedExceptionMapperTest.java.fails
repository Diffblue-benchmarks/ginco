package fr.mcc.ginco.rest.services.exceptions;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.empty;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.core.Is.is;

import javax.ws.rs.core.Response;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for fr.mcc.ginco.rest.services.exceptions.ThesaurusArchivedAccessDeniedExceptionMapper
 *
 * @author Diffblue Cover
 */

class ThesaurusArchivedAccessDeniedExceptionMapperTest {

	@Test
	void toResponse() throws IllegalStateException {

		// arrange
		Exception exception = new Exception();
		exception.setStackTrace(new StackTraceElement[] { });

		// act
		Response result =
			 new ThesaurusArchivedAccessDeniedExceptionMapper().toResponse(exception);

		// assert
		assertThat(result.getAllowedMethods(), empty());
		assertThat(result.getCookies().isEmpty(), is(true));
		assertThat(result.getDate(), is(nullValue()));
		assertThat((String) result.getEntity(), is("{\"success\":false, \"message\": \"Ce th\\u00E9saurus est archiv\\u00E9, seule la suppression est autoris\\u00E9e\"}"));
		assertThat(result.getEntityTag(), is(nullValue()));
		assertThat(result.getLanguage(), is(nullValue()));
		assertThat(result.getLastModified(), is(nullValue()));
		assertThat(result.getLength(), is(-1));
		assertThat(result.getLinks(), empty());
		assertThat(result.getLocation(), is(nullValue()));
		assertThat(result.getMediaType(), is(nullValue()));
		assertThat(result.getMetadata().isEmpty(), is(true));
		assertThat(result.getStatus(), is(200));
		assertThat(result.getStatusInfo().getFamily(), is(Response.Family.SUCCESSFUL));
		assertThat(result.getStatusInfo().getReasonPhrase(), is("OK"));
		assertThat(result.getStatusInfo().getStatusCode(), is(200));
		assertThat(result.getStringHeaders().isEmpty(), is(true));
	}
}

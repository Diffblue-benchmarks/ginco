package fr.mcc.ginco.rest.services;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.empty;
import static org.hamcrest.core.Is.is;

import fr.mcc.ginco.extjs.view.ExtJsonFormLoadData;
import fr.mcc.ginco.extjs.view.pojo.SuggestionView;
import fr.mcc.ginco.extjs.view.utils.SuggestionViewConverter;
import fr.mcc.ginco.services.ISuggestionService;
import fr.mcc.ginco.services.IThesaurusConceptService;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

/**
 * Unit tests for fr.mcc.ginco.rest.services.SuggestionRestService
 *
 * @author Diffblue Cover
 */

@ContextConfiguration(classes = {SuggestionRestService.class})
@ExtendWith(SpringExtension.class)
class SuggestionRestServiceTest {

	@MockBean(name = "suggestionService")
	private ISuggestionService suggestionService;

	@MockBean(name = "suggestionViewConverter")
	private SuggestionViewConverter suggestionViewConverter;

	@MockBean(name = "thesaurusConceptService")
	private IThesaurusConceptService thesaurusConceptService;

	@Autowired
	private SuggestionRestService service;

	@Test
	void updateSuggestionsSuggestionViewsIsEmpty() {
		ExtJsonFormLoadData<List<SuggestionView>> result =
			 service.updateSuggestions(new ArrayList<SuggestionView>());
		assertThat(result.getData(), empty());
		assertThat(result.getTotal(), is(0L));
		assertThat(result.isSuccess(), is(true));
	}

	@Test
	void createSuggestionsConceptIdIsBarAndSuggestionViewsIsEmpty() {
		ExtJsonFormLoadData<List<SuggestionView>> result =
			 service.createSuggestions(new ArrayList<SuggestionView>(), "bar", "1234");
		assertThat(result.getData(), empty());
		assertThat(result.getTotal(), is(0L));
		assertThat(result.isSuccess(), is(true));
	}

	@Test
	void destroySuggestionsSuggestionViewsIsEmpty() {
		service.destroySuggestions(new ArrayList<SuggestionView>());
	}
}

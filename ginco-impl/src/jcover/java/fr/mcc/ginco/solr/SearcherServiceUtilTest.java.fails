package fr.mcc.ginco.solr;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import org.apache.solr.common.SolrDocumentList;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.MockitoAnnotations;

/**
 * Unit tests for fr.mcc.ginco.solr.SearcherServiceUtil
 *
 * @author Diffblue Cover
 */

public class SearcherServiceUtilTest {

	@InjectMocks
	private SearcherServiceUtil service;

	@Before public void initMocks() {
		MockitoAnnotations.initMocks(this);
	}

	@Test
	public void addAndQuery() {
		assertEquals("+data:\"[ * TO fooZ ]\" ", service.addAndQuery("data", "foo", false, true));
		assertEquals("", service.addAndQuery("data", "", false, false));
		assertEquals("", service.addAndQuery("data", "-1", false, false));
		assertEquals("+data:foo ", service.addAndQuery("data", "foo", null, false));
		assertEquals("+data:[ java.lang.Object@74650e52Z TO * ] ", service.addAndQuery("data", new Object(), true, false));
		assertEquals("+data:[ fooZ TO * ] ", service.addAndQuery("data", "foo", true, false));
		assertEquals("", service.addAndQuery("data", null, true, false));
	}

	@Test
	public void getExtTypeQuery() {
		assertEquals("", service.getExtTypeQuery(-1));
		assertEquals("", service.getExtTypeQuery(null));
		assertEquals("+ext_type:1", service.getExtTypeQuery(1));
		assertEquals("", service.getExtTypeQuery(0));
	}

	@Test
	public void getSearchResultListListIsEmptyReturnsEmpty() {
		assertTrue((service.getSearchResultList(new SolrDocumentList())).isEmpty());
	}
}

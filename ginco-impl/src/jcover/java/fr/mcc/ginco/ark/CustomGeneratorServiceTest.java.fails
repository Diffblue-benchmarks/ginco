package fr.mcc.ginco.ark;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;

import fr.mcc.ginco.beans.ThesaurusArk;
import fr.mcc.ginco.services.IThesaurusArkService;

import java.text.SimpleDateFormat;

import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;

/**
 * Unit tests for fr.mcc.ginco.ark.CustomGeneratorService
 *
 * @author Diffblue Cover
 */

public class CustomGeneratorServiceTest {

	@Mock(name = "thesaurusArkService")
	private IThesaurusArkService thesaurusArkService;

	@InjectMocks
	private CustomGeneratorService service;

	@Before public void initMocks() {
		MockitoAnnotations.initMocks(this);
	}

	@Test
	public void generateEntityIsString() throws java.text.ParseException {
		ThesaurusArk thesaurusArk = new ThesaurusArk();
		thesaurusArk.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusArk.setEntity("entity");
		thesaurusArk.setIdentifier("data");
		when(thesaurusArkService.createThesaurusArk(Mockito.<ThesaurusArk>any()))
			.thenReturn(thesaurusArk);
		assertEquals("null/ark:/null/1f6628d5-f6bb-4412-b4e4-7c96906e6d9e", service.generate(String.class));
	}
}

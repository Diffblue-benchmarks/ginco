package fr.mcc.ginco.exports.result.bean;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.notNullValue;
import static org.hamcrest.core.Is.is;
import static org.hamcrest.core.IsSame.sameInstance;

import fr.mcc.ginco.beans.Alignment;
import fr.mcc.ginco.beans.AssociativeRelationship;
import fr.mcc.ginco.beans.ConceptHierarchicalRelationship;
import fr.mcc.ginco.beans.CustomConceptAttribute;
import fr.mcc.ginco.beans.CustomConceptAttributeType;
import fr.mcc.ginco.beans.CustomTermAttribute;
import fr.mcc.ginco.beans.CustomTermAttributeType;
import fr.mcc.ginco.beans.Language;
import fr.mcc.ginco.beans.NodeLabel;
import fr.mcc.ginco.beans.Note;
import fr.mcc.ginco.beans.SplitNonPreferredTerm;
import fr.mcc.ginco.beans.Thesaurus;
import fr.mcc.ginco.beans.ThesaurusArray;
import fr.mcc.ginco.beans.ThesaurusArrayConcept;
import fr.mcc.ginco.beans.ThesaurusConcept;
import fr.mcc.ginco.beans.ThesaurusConceptGroup;
import fr.mcc.ginco.beans.ThesaurusConceptGroupLabel;
import fr.mcc.ginco.beans.ThesaurusConceptGroupType;
import fr.mcc.ginco.beans.ThesaurusFormat;
import fr.mcc.ginco.beans.ThesaurusOrganization;
import fr.mcc.ginco.beans.ThesaurusTerm;
import fr.mcc.ginco.beans.ThesaurusTermRole;
import fr.mcc.ginco.beans.ThesaurusType;
import fr.mcc.ginco.beans.ThesaurusVersionHistory;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for fr.mcc.ginco.exports.result.bean.GincoExportedThesaurus
 *
 * @author Diffblue Cover
 */

class GincoExportedThesaurusTest {

	@Test
	void factory() throws java.text.ParseException {
		GincoExportedThesaurus gincoExportedThesaurus = new GincoExportedThesaurus();
		gincoExportedThesaurus.setAlignments(new HashMap<String, JaxbList<Alignment>>());
		gincoExportedThesaurus.setAssociativeRelationship(new HashMap<String, JaxbList<AssociativeRelationship>>());
		ArrayList<SplitNonPreferredTerm> complexConcepts =
			 new ArrayList<SplitNonPreferredTerm>();
		SplitNonPreferredTerm splitNonPreferredTerm = new SplitNonPreferredTerm();
		splitNonPreferredTerm.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		splitNonPreferredTerm.setIdentifier("data");
		Language language1 = new Language();
		language1.setId("1234");
		language1.setPart1("foo");
		language1.setPrincipalLanguage(false);
		language1.setRefname("root");
		language1.setTopLanguage(false);
		splitNonPreferredTerm.setLanguage(language1);
		splitNonPreferredTerm.setLexicalValue("value");
		splitNonPreferredTerm.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		splitNonPreferredTerm.setPreferredTerms(new HashSet<ThesaurusTerm>());
		splitNonPreferredTerm.setSource("foo");
		splitNonPreferredTerm.setStatus(1);
		Thesaurus thesaurus1 = new Thesaurus();
		thesaurus1.setArchived(false);
		thesaurus1.setContributor("foo");
		thesaurus1.setCoverage("foo");
		thesaurus1.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator1 = new ThesaurusOrganization();
		creator1.setEmail("info@diffblue.com");
		creator1.setHomepage("foo");
		creator1.setIdentifier(1);
		creator1.setName("Acme");
		thesaurus1.setCreator(creator1);
		thesaurus1.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus1.setDefaultTopConcept(false);
		thesaurus1.setDescription("some text");
		thesaurus1.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus1.setIdentifier("data");
		thesaurus1.setLang(new HashSet<Language>());
		thesaurus1.setPolyHierarchical(false);
		thesaurus1.setPublisher("foo");
		thesaurus1.setRelation("DE");
		thesaurus1.setRights("foo");
		thesaurus1.setSource("foo");
		thesaurus1.setSubject("foo");
		thesaurus1.setTitle("Mr");
		ThesaurusType type1 = new ThesaurusType();
		type1.setIdentifier(1);
		type1.setLabel("label");
		thesaurus1.setType(type1);
		thesaurus1.setVersions(new HashSet<ThesaurusVersionHistory>());
		splitNonPreferredTerm.setThesaurus(thesaurus1);
		complexConcepts.add(splitNonPreferredTerm);
		gincoExportedThesaurus.setComplexConcepts(complexConcepts);
		gincoExportedThesaurus.setConceptArrayLabels(new HashMap<String, JaxbList<NodeLabel>>());
		ArrayList<ThesaurusArray> conceptArrays1 = new ArrayList<ThesaurusArray>();
		ThesaurusArray thesaurusArray = new ThesaurusArray();
		thesaurusArray.setConcepts(new HashSet<ThesaurusArrayConcept>());
		thesaurusArray.setIdentifier("data");
		thesaurusArray.setNotation("DE");
		thesaurusArray.setOrdered(false);
		ThesaurusArray parent1 = new ThesaurusArray();
		parent1.setConcepts(new HashSet<ThesaurusArrayConcept>());
		parent1.setIdentifier("data");
		parent1.setNotation("DE");
		parent1.setOrdered(false);
		ThesaurusArray parent2 = new ThesaurusArray();
		parent2.setConcepts(new HashSet<ThesaurusArrayConcept>());
		parent2.setIdentifier("data");
		parent2.setNotation("DE");
		parent2.setOrdered(false);
		parent2.setParent(new ThesaurusArray());
		parent2.setSuperOrdinateConcept(new ThesaurusConcept());
		parent2.setThesaurus(new Thesaurus());
		parent1.setParent(parent2);
		ThesaurusConcept superOrdinateConcept2 = new ThesaurusConcept();
		superOrdinateConcept2.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		superOrdinateConcept2.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		superOrdinateConcept2.setConceptArrays(new HashSet<ThesaurusArray>());
		superOrdinateConcept2.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		superOrdinateConcept2.setIdentifier("data");
		superOrdinateConcept2.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		superOrdinateConcept2.setNotation("DE");
		superOrdinateConcept2.setParentConcepts(new HashSet<ThesaurusConcept>());
		superOrdinateConcept2.setRootConcepts(new HashSet<ThesaurusConcept>());
		superOrdinateConcept2.setStatus(1);
		superOrdinateConcept2.setThesaurus(new Thesaurus());
		superOrdinateConcept2.setTopConcept(false);
		parent1.setSuperOrdinateConcept(superOrdinateConcept2);
		Thesaurus thesaurus4 = new Thesaurus();
		thesaurus4.setArchived(false);
		thesaurus4.setContributor("foo");
		thesaurus4.setCoverage("foo");
		thesaurus4.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus4.setCreator(new ThesaurusOrganization());
		thesaurus4.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus4.setDefaultTopConcept(false);
		thesaurus4.setDescription("some text");
		thesaurus4.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus4.setIdentifier("data");
		thesaurus4.setLang(new HashSet<Language>());
		thesaurus4.setPolyHierarchical(false);
		thesaurus4.setPublisher("foo");
		thesaurus4.setRelation("DE");
		thesaurus4.setRights("foo");
		thesaurus4.setSource("foo");
		thesaurus4.setSubject("foo");
		thesaurus4.setTitle("Mr");
		thesaurus4.setType(new ThesaurusType());
		thesaurus4.setVersions(new HashSet<ThesaurusVersionHistory>());
		parent1.setThesaurus(thesaurus4);
		thesaurusArray.setParent(parent1);
		ThesaurusConcept superOrdinateConcept3 = new ThesaurusConcept();
		superOrdinateConcept3.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		superOrdinateConcept3.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		superOrdinateConcept3.setConceptArrays(new HashSet<ThesaurusArray>());
		superOrdinateConcept3.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		superOrdinateConcept3.setIdentifier("data");
		superOrdinateConcept3.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		superOrdinateConcept3.setNotation("DE");
		superOrdinateConcept3.setParentConcepts(new HashSet<ThesaurusConcept>());
		superOrdinateConcept3.setRootConcepts(new HashSet<ThesaurusConcept>());
		superOrdinateConcept3.setStatus(1);
		Thesaurus thesaurus5 = new Thesaurus();
		thesaurus5.setArchived(false);
		thesaurus5.setContributor("foo");
		thesaurus5.setCoverage("foo");
		thesaurus5.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus5.setCreator(new ThesaurusOrganization());
		thesaurus5.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus5.setDefaultTopConcept(false);
		thesaurus5.setDescription("some text");
		thesaurus5.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus5.setIdentifier("data");
		thesaurus5.setLang(new HashSet<Language>());
		thesaurus5.setPolyHierarchical(false);
		thesaurus5.setPublisher("foo");
		thesaurus5.setRelation("DE");
		thesaurus5.setRights("foo");
		thesaurus5.setSource("foo");
		thesaurus5.setSubject("foo");
		thesaurus5.setTitle("Mr");
		thesaurus5.setType(new ThesaurusType());
		thesaurus5.setVersions(new HashSet<ThesaurusVersionHistory>());
		superOrdinateConcept3.setThesaurus(thesaurus5);
		superOrdinateConcept3.setTopConcept(false);
		thesaurusArray.setSuperOrdinateConcept(superOrdinateConcept3);
		Thesaurus thesaurus6 = new Thesaurus();
		thesaurus6.setArchived(false);
		thesaurus6.setContributor("foo");
		thesaurus6.setCoverage("foo");
		thesaurus6.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator4 = new ThesaurusOrganization();
		creator4.setEmail("info@diffblue.com");
		creator4.setHomepage("foo");
		creator4.setIdentifier(1);
		creator4.setName("Acme");
		thesaurus6.setCreator(creator4);
		thesaurus6.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus6.setDefaultTopConcept(false);
		thesaurus6.setDescription("some text");
		thesaurus6.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus6.setIdentifier("data");
		thesaurus6.setLang(new HashSet<Language>());
		thesaurus6.setPolyHierarchical(false);
		thesaurus6.setPublisher("foo");
		thesaurus6.setRelation("DE");
		thesaurus6.setRights("foo");
		thesaurus6.setSource("foo");
		thesaurus6.setSubject("foo");
		thesaurus6.setTitle("Mr");
		ThesaurusType type4 = new ThesaurusType();
		type4.setIdentifier(1);
		type4.setLabel("label");
		thesaurus6.setType(type4);
		thesaurus6.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusArray.setThesaurus(thesaurus6);
		conceptArrays1.add(thesaurusArray);
		gincoExportedThesaurus.setConceptArrays(conceptArrays1);
		gincoExportedThesaurus.setConceptGroupLabels(new HashMap<String, JaxbList<ThesaurusConceptGroupLabel>>());
		ArrayList<ThesaurusConceptGroup> conceptGroups =
			 new ArrayList<ThesaurusConceptGroup>();
		ThesaurusConceptGroup thesaurusConceptGroup = new ThesaurusConceptGroup();
		ThesaurusConceptGroupType conceptGroupType1 =
			 new ThesaurusConceptGroupType();
		conceptGroupType1.setCode("DE");
		conceptGroupType1.setLabel("label");
		conceptGroupType1.setSkosLabel("label");
		thesaurusConceptGroup.setConceptGroupType(conceptGroupType1);
		thesaurusConceptGroup.setConcepts(new HashSet<ThesaurusConcept>());
		thesaurusConceptGroup.setIdentifier("data");
		thesaurusConceptGroup.setIsDynamic(false);
		thesaurusConceptGroup.setNotation("DE");
		ThesaurusConceptGroup parent4 = new ThesaurusConceptGroup();
		ThesaurusConceptGroupType conceptGroupType2 =
			 new ThesaurusConceptGroupType();
		conceptGroupType2.setCode("DE");
		conceptGroupType2.setLabel("label");
		conceptGroupType2.setSkosLabel("label");
		parent4.setConceptGroupType(conceptGroupType2);
		parent4.setConcepts(new HashSet<ThesaurusConcept>());
		parent4.setIdentifier("data");
		parent4.setIsDynamic(false);
		parent4.setNotation("DE");
		ThesaurusConceptGroup parent5 = new ThesaurusConceptGroup();
		parent5.setConceptGroupType(new ThesaurusConceptGroupType());
		parent5.setConcepts(new HashSet<ThesaurusConcept>());
		parent5.setIdentifier("data");
		parent5.setIsDynamic(false);
		parent5.setNotation("DE");
		parent5.setParent(new ThesaurusConceptGroup());
		parent5.setParentConcept(new ThesaurusConcept());
		parent5.setThesaurus(new Thesaurus());
		parent4.setParent(parent5);
		ThesaurusConcept parentConcept2 = new ThesaurusConcept();
		parentConcept2.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		parentConcept2.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		parentConcept2.setConceptArrays(new HashSet<ThesaurusArray>());
		parentConcept2.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		parentConcept2.setIdentifier("data");
		parentConcept2.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		parentConcept2.setNotation("DE");
		parentConcept2.setParentConcepts(new HashSet<ThesaurusConcept>());
		parentConcept2.setRootConcepts(new HashSet<ThesaurusConcept>());
		parentConcept2.setStatus(1);
		parentConcept2.setThesaurus(new Thesaurus());
		parentConcept2.setTopConcept(false);
		parent4.setParentConcept(parentConcept2);
		Thesaurus thesaurus9 = new Thesaurus();
		thesaurus9.setArchived(false);
		thesaurus9.setContributor("foo");
		thesaurus9.setCoverage("foo");
		thesaurus9.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus9.setCreator(new ThesaurusOrganization());
		thesaurus9.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus9.setDefaultTopConcept(false);
		thesaurus9.setDescription("some text");
		thesaurus9.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus9.setIdentifier("data");
		thesaurus9.setLang(new HashSet<Language>());
		thesaurus9.setPolyHierarchical(false);
		thesaurus9.setPublisher("foo");
		thesaurus9.setRelation("DE");
		thesaurus9.setRights("foo");
		thesaurus9.setSource("foo");
		thesaurus9.setSubject("foo");
		thesaurus9.setTitle("Mr");
		thesaurus9.setType(new ThesaurusType());
		thesaurus9.setVersions(new HashSet<ThesaurusVersionHistory>());
		parent4.setThesaurus(thesaurus9);
		thesaurusConceptGroup.setParent(parent4);
		ThesaurusConcept parentConcept3 = new ThesaurusConcept();
		parentConcept3.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		parentConcept3.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		parentConcept3.setConceptArrays(new HashSet<ThesaurusArray>());
		parentConcept3.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		parentConcept3.setIdentifier("data");
		parentConcept3.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		parentConcept3.setNotation("DE");
		parentConcept3.setParentConcepts(new HashSet<ThesaurusConcept>());
		parentConcept3.setRootConcepts(new HashSet<ThesaurusConcept>());
		parentConcept3.setStatus(1);
		Thesaurus thesaurus10 = new Thesaurus();
		thesaurus10.setArchived(false);
		thesaurus10.setContributor("foo");
		thesaurus10.setCoverage("foo");
		thesaurus10.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus10.setCreator(new ThesaurusOrganization());
		thesaurus10.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus10.setDefaultTopConcept(false);
		thesaurus10.setDescription("some text");
		thesaurus10.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus10.setIdentifier("data");
		thesaurus10.setLang(new HashSet<Language>());
		thesaurus10.setPolyHierarchical(false);
		thesaurus10.setPublisher("foo");
		thesaurus10.setRelation("DE");
		thesaurus10.setRights("foo");
		thesaurus10.setSource("foo");
		thesaurus10.setSubject("foo");
		thesaurus10.setTitle("Mr");
		thesaurus10.setType(new ThesaurusType());
		thesaurus10.setVersions(new HashSet<ThesaurusVersionHistory>());
		parentConcept3.setThesaurus(thesaurus10);
		parentConcept3.setTopConcept(false);
		thesaurusConceptGroup.setParentConcept(parentConcept3);
		Thesaurus thesaurus11 = new Thesaurus();
		thesaurus11.setArchived(false);
		thesaurus11.setContributor("foo");
		thesaurus11.setCoverage("foo");
		thesaurus11.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator7 = new ThesaurusOrganization();
		creator7.setEmail("info@diffblue.com");
		creator7.setHomepage("foo");
		creator7.setIdentifier(1);
		creator7.setName("Acme");
		thesaurus11.setCreator(creator7);
		thesaurus11.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus11.setDefaultTopConcept(false);
		thesaurus11.setDescription("some text");
		thesaurus11.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus11.setIdentifier("data");
		thesaurus11.setLang(new HashSet<Language>());
		thesaurus11.setPolyHierarchical(false);
		thesaurus11.setPublisher("foo");
		thesaurus11.setRelation("DE");
		thesaurus11.setRights("foo");
		thesaurus11.setSource("foo");
		thesaurus11.setSubject("foo");
		thesaurus11.setTitle("Mr");
		ThesaurusType type7 = new ThesaurusType();
		type7.setIdentifier(1);
		type7.setLabel("label");
		thesaurus11.setType(type7);
		thesaurus11.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusConceptGroup.setThesaurus(thesaurus11);
		conceptGroups.add(thesaurusConceptGroup);
		gincoExportedThesaurus.setConceptGroups(conceptGroups);
		gincoExportedThesaurus.setConceptNotes(new HashMap<String, JaxbList<Note>>());
		gincoExportedThesaurus.setHierarchicalRelationship(new HashMap<String, JaxbList<ConceptHierarchicalRelationship>>());
		gincoExportedThesaurus.setTermNotes(new HashMap<String, JaxbList<Note>>());
		Thesaurus thesaurus12 = new Thesaurus();
		thesaurus12.setArchived(false);
		thesaurus12.setContributor("foo");
		thesaurus12.setCoverage("foo");
		thesaurus12.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator8 = new ThesaurusOrganization();
		creator8.setEmail("info@diffblue.com");
		creator8.setHomepage("foo");
		creator8.setIdentifier(1);
		creator8.setName("Acme");
		thesaurus12.setCreator(creator8);
		thesaurus12.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus12.setDefaultTopConcept(false);
		thesaurus12.setDescription("some text");
		thesaurus12.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus12.setIdentifier("data");
		thesaurus12.setLang(new HashSet<Language>());
		thesaurus12.setPolyHierarchical(false);
		thesaurus12.setPublisher("foo");
		thesaurus12.setRelation("DE");
		thesaurus12.setRights("foo");
		thesaurus12.setSource("foo");
		thesaurus12.setSubject("foo");
		thesaurus12.setTitle("Mr");
		ThesaurusType type8 = new ThesaurusType();
		type8.setIdentifier(1);
		type8.setLabel("label");
		thesaurus12.setType(type8);
		thesaurus12.setVersions(new HashSet<ThesaurusVersionHistory>());
		gincoExportedThesaurus.setThesaurus(thesaurus12);
		ArrayList<ThesaurusVersionHistory> versions9 =
			 new ArrayList<ThesaurusVersionHistory>();
		ThesaurusVersionHistory thesaurusVersionHistory =
			 new ThesaurusVersionHistory();
		thesaurusVersionHistory.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusVersionHistory.setIdentifier("data");
		thesaurusVersionHistory.setStatus(1);
		Thesaurus thesaurus13 = new Thesaurus();
		thesaurus13.setArchived(false);
		thesaurus13.setContributor("foo");
		thesaurus13.setCoverage("foo");
		thesaurus13.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator10 = new ThesaurusOrganization();
		creator10.setEmail("info@diffblue.com");
		creator10.setHomepage("foo");
		creator10.setIdentifier(1);
		creator10.setName("Acme");
		thesaurus13.setCreator(creator10);
		thesaurus13.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus13.setDefaultTopConcept(false);
		thesaurus13.setDescription("some text");
		thesaurus13.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus13.setIdentifier("data");
		thesaurus13.setLang(new HashSet<Language>());
		thesaurus13.setPolyHierarchical(false);
		thesaurus13.setPublisher("foo");
		thesaurus13.setRelation("DE");
		thesaurus13.setRights("foo");
		thesaurus13.setSource("foo");
		thesaurus13.setSubject("foo");
		thesaurus13.setTitle("Mr");
		ThesaurusType type10 = new ThesaurusType();
		type10.setIdentifier(1);
		type10.setLabel("label");
		thesaurus13.setType(type10);
		thesaurus13.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusVersionHistory.setThesaurus(thesaurus13);
		thesaurusVersionHistory.setThisVersion(false);
		thesaurusVersionHistory.setUserId("root");
		thesaurusVersionHistory.setVersionNote("1.0");
		versions9.add(thesaurusVersionHistory);
		gincoExportedThesaurus.setThesaurusVersions(versions9);
		ArrayList<CustomConceptAttributeType> conceptAttributeTypes =
			 new ArrayList<CustomConceptAttributeType>();
		CustomConceptAttributeType customConceptAttributeType =
			 new CustomConceptAttributeType();
		customConceptAttributeType.setExportable(false);
		customConceptAttributeType.setCode("DE");
		customConceptAttributeType.setIdentifier(1);
		Thesaurus thesaurus14 = new Thesaurus();
		thesaurus14.setArchived(false);
		thesaurus14.setContributor("foo");
		thesaurus14.setCoverage("foo");
		thesaurus14.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator11 = new ThesaurusOrganization();
		creator11.setEmail("info@diffblue.com");
		creator11.setHomepage("foo");
		creator11.setIdentifier(1);
		creator11.setName("Acme");
		thesaurus14.setCreator(creator11);
		thesaurus14.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus14.setDefaultTopConcept(false);
		thesaurus14.setDescription("some text");
		thesaurus14.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus14.setIdentifier("data");
		thesaurus14.setLang(new HashSet<Language>());
		thesaurus14.setPolyHierarchical(false);
		thesaurus14.setPublisher("foo");
		thesaurus14.setRelation("DE");
		thesaurus14.setRights("foo");
		thesaurus14.setSource("foo");
		thesaurus14.setSubject("foo");
		thesaurus14.setTitle("Mr");
		ThesaurusType type11 = new ThesaurusType();
		type11.setIdentifier(1);
		type11.setLabel("label");
		thesaurus14.setType(type11);
		thesaurus14.setVersions(new HashSet<ThesaurusVersionHistory>());
		customConceptAttributeType.setThesaurus(thesaurus14);
		customConceptAttributeType.setValue("value");
		conceptAttributeTypes.add(customConceptAttributeType);
		gincoExportedThesaurus.setConceptAttributeTypes(conceptAttributeTypes);
		gincoExportedThesaurus.setConceptAttributes(new HashMap<String, JaxbList<CustomConceptAttribute>>());
		ArrayList<ThesaurusConcept> concepts7 = new ArrayList<ThesaurusConcept>();
		ThesaurusConcept thesaurusConcept = new ThesaurusConcept();
		thesaurusConcept.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		thesaurusConcept.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		thesaurusConcept.setConceptArrays(new HashSet<ThesaurusArray>());
		thesaurusConcept.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusConcept.setIdentifier("data");
		thesaurusConcept.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusConcept.setNotation("DE");
		thesaurusConcept.setParentConcepts(new HashSet<ThesaurusConcept>());
		thesaurusConcept.setRootConcepts(new HashSet<ThesaurusConcept>());
		thesaurusConcept.setStatus(1);
		Thesaurus thesaurus15 = new Thesaurus();
		thesaurus15.setArchived(false);
		thesaurus15.setContributor("foo");
		thesaurus15.setCoverage("foo");
		thesaurus15.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator12 = new ThesaurusOrganization();
		creator12.setEmail("info@diffblue.com");
		creator12.setHomepage("foo");
		creator12.setIdentifier(1);
		creator12.setName("Acme");
		thesaurus15.setCreator(creator12);
		thesaurus15.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus15.setDefaultTopConcept(false);
		thesaurus15.setDescription("some text");
		thesaurus15.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus15.setIdentifier("data");
		thesaurus15.setLang(new HashSet<Language>());
		thesaurus15.setPolyHierarchical(false);
		thesaurus15.setPublisher("foo");
		thesaurus15.setRelation("DE");
		thesaurus15.setRights("foo");
		thesaurus15.setSource("foo");
		thesaurus15.setSubject("foo");
		thesaurus15.setTitle("Mr");
		ThesaurusType type12 = new ThesaurusType();
		type12.setIdentifier(1);
		type12.setLabel("label");
		thesaurus15.setType(type12);
		thesaurus15.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusConcept.setThesaurus(thesaurus15);
		thesaurusConcept.setTopConcept(false);
		concepts7.add(thesaurusConcept);
		gincoExportedThesaurus.setConcepts(concepts7);
		ArrayList<CustomTermAttributeType> termAttributeTypes =
			 new ArrayList<CustomTermAttributeType>();
		CustomTermAttributeType customTermAttributeType =
			 new CustomTermAttributeType();
		customTermAttributeType.setCode("DE");
		customTermAttributeType.setIdentifier(1);
		Thesaurus thesaurus16 = new Thesaurus();
		thesaurus16.setArchived(false);
		thesaurus16.setContributor("foo");
		thesaurus16.setCoverage("foo");
		thesaurus16.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator13 = new ThesaurusOrganization();
		creator13.setEmail("info@diffblue.com");
		creator13.setHomepage("foo");
		creator13.setIdentifier(1);
		creator13.setName("Acme");
		thesaurus16.setCreator(creator13);
		thesaurus16.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus16.setDefaultTopConcept(false);
		thesaurus16.setDescription("some text");
		thesaurus16.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus16.setIdentifier("data");
		thesaurus16.setLang(new HashSet<Language>());
		thesaurus16.setPolyHierarchical(false);
		thesaurus16.setPublisher("foo");
		thesaurus16.setRelation("DE");
		thesaurus16.setRights("foo");
		thesaurus16.setSource("foo");
		thesaurus16.setSubject("foo");
		thesaurus16.setTitle("Mr");
		ThesaurusType type13 = new ThesaurusType();
		type13.setIdentifier(1);
		type13.setLabel("label");
		thesaurus16.setType(type13);
		thesaurus16.setVersions(new HashSet<ThesaurusVersionHistory>());
		customTermAttributeType.setThesaurus(thesaurus16);
		customTermAttributeType.setValue("value");
		termAttributeTypes.add(customTermAttributeType);
		gincoExportedThesaurus.setTermAttributeTypes(termAttributeTypes);
		gincoExportedThesaurus.setTermAttributes(new HashMap<String, JaxbList<CustomTermAttribute>>());
		ArrayList<ThesaurusTerm> terms = new ArrayList<ThesaurusTerm>();
		ThesaurusTerm thesaurusTerm = new ThesaurusTerm();
		ThesaurusConcept concept = new ThesaurusConcept();
		concept.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		concept.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		concept.setConceptArrays(new HashSet<ThesaurusArray>());
		concept.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		concept.setIdentifier("data");
		concept.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		concept.setNotation("DE");
		concept.setParentConcepts(new HashSet<ThesaurusConcept>());
		concept.setRootConcepts(new HashSet<ThesaurusConcept>());
		concept.setStatus(1);
		Thesaurus thesaurus17 = new Thesaurus();
		thesaurus17.setArchived(false);
		thesaurus17.setContributor("foo");
		thesaurus17.setCoverage("foo");
		thesaurus17.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus17.setCreator(new ThesaurusOrganization());
		thesaurus17.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus17.setDefaultTopConcept(false);
		thesaurus17.setDescription("some text");
		thesaurus17.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus17.setIdentifier("data");
		thesaurus17.setLang(new HashSet<Language>());
		thesaurus17.setPolyHierarchical(false);
		thesaurus17.setPublisher("foo");
		thesaurus17.setRelation("DE");
		thesaurus17.setRights("foo");
		thesaurus17.setSource("foo");
		thesaurus17.setSubject("foo");
		thesaurus17.setTitle("Mr");
		thesaurus17.setType(new ThesaurusType());
		thesaurus17.setVersions(new HashSet<ThesaurusVersionHistory>());
		concept.setThesaurus(thesaurus17);
		concept.setTopConcept(false);
		thesaurusTerm.setConcept(concept);
		thesaurusTerm.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusTerm.setHidden(false);
		thesaurusTerm.setIdentifier("data");
		Language language2 = new Language();
		language2.setId("1234");
		language2.setPart1("foo");
		language2.setPrincipalLanguage(false);
		language2.setRefname("root");
		language2.setTopLanguage(false);
		thesaurusTerm.setLanguage(language2);
		thesaurusTerm.setLexicalValue("value");
		thesaurusTerm.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusTerm.setPrefered(false);
		ThesaurusTermRole role = new ThesaurusTermRole();
		role.setCode("DE");
		role.setDefaultRole(false);
		role.setLabel("label");
		thesaurusTerm.setRole(role);
		thesaurusTerm.setSource("foo");
		thesaurusTerm.setStatus(1);
		Thesaurus thesaurus18 = new Thesaurus();
		thesaurus18.setArchived(false);
		thesaurus18.setContributor("foo");
		thesaurus18.setCoverage("foo");
		thesaurus18.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator15 = new ThesaurusOrganization();
		creator15.setEmail("info@diffblue.com");
		creator15.setHomepage("foo");
		creator15.setIdentifier(1);
		creator15.setName("Acme");
		thesaurus18.setCreator(creator15);
		thesaurus18.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus18.setDefaultTopConcept(false);
		thesaurus18.setDescription("some text");
		thesaurus18.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus18.setIdentifier("data");
		thesaurus18.setLang(new HashSet<Language>());
		thesaurus18.setPolyHierarchical(false);
		thesaurus18.setPublisher("foo");
		thesaurus18.setRelation("DE");
		thesaurus18.setRights("foo");
		thesaurus18.setSource("foo");
		thesaurus18.setSubject("foo");
		thesaurus18.setTitle("Mr");
		ThesaurusType type15 = new ThesaurusType();
		type15.setIdentifier(1);
		type15.setLabel("label");
		thesaurus18.setType(type15);
		thesaurus18.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusTerm.setThesaurus(thesaurus18);
		terms.add(thesaurusTerm);
		gincoExportedThesaurus.setTerms(terms);
		assertThat(gincoExportedThesaurus.getAlignments(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getAssociativeRelationship(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getComplexConcepts().size(), is(1));
		assertThat(gincoExportedThesaurus.getComplexConcepts().get(0), sameInstance(splitNonPreferredTerm));
		assertThat(gincoExportedThesaurus.getConceptArrayLabels(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getConceptArrays().size(), is(1));
		assertThat(gincoExportedThesaurus.getConceptArrays().get(0), sameInstance(thesaurusArray));
		assertThat(gincoExportedThesaurus.getConceptGroupLabels(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getConceptGroups().size(), is(1));
		assertThat(gincoExportedThesaurus.getConceptGroups().get(0), sameInstance(thesaurusConceptGroup));
		assertThat(gincoExportedThesaurus.getConceptNotes(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getHierarchicalRelationship(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getTermNotes(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getThesaurus(), sameInstance(thesaurus12));
		assertThat(gincoExportedThesaurus.getThesaurusVersions().size(), is(1));
		assertThat(gincoExportedThesaurus.getThesaurusVersions().get(0), sameInstance(thesaurusVersionHistory));
		assertThat(gincoExportedThesaurus.getConceptAttributeTypes().size(), is(1));
		assertThat(gincoExportedThesaurus.getConceptAttributeTypes().get(0), sameInstance(customConceptAttributeType));
		assertThat(gincoExportedThesaurus.getConceptAttributes(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getConcepts().size(), is(1));
		assertThat(gincoExportedThesaurus.getConcepts().get(0), sameInstance(thesaurusConcept));
		assertThat(gincoExportedThesaurus.getTermAttributeTypes().size(), is(1));
		assertThat(gincoExportedThesaurus.getTermAttributeTypes().get(0), sameInstance(customTermAttributeType));
		assertThat(gincoExportedThesaurus.getTermAttributes(), is(notNullValue()));
		assertThat(gincoExportedThesaurus.getTerms().size(), is(1));
		assertThat(gincoExportedThesaurus.getTerms().get(0), sameInstance(thesaurusTerm));
	}
}

package fr.mcc.ginco.exports.result.bean;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;
import static org.hamcrest.core.IsSame.sameInstance;

import fr.mcc.ginco.beans.Alignment;
import fr.mcc.ginco.beans.AssociativeRelationship;
import fr.mcc.ginco.beans.ConceptHierarchicalRelationship;
import fr.mcc.ginco.beans.CustomConceptAttribute;
import fr.mcc.ginco.beans.CustomConceptAttributeType;
import fr.mcc.ginco.beans.CustomTermAttribute;
import fr.mcc.ginco.beans.CustomTermAttributeType;
import fr.mcc.ginco.beans.Language;
import fr.mcc.ginco.beans.NodeLabel;
import fr.mcc.ginco.beans.Note;
import fr.mcc.ginco.beans.SplitNonPreferredTerm;
import fr.mcc.ginco.beans.Thesaurus;
import fr.mcc.ginco.beans.ThesaurusArray;
import fr.mcc.ginco.beans.ThesaurusArrayConcept;
import fr.mcc.ginco.beans.ThesaurusConcept;
import fr.mcc.ginco.beans.ThesaurusConceptGroup;
import fr.mcc.ginco.beans.ThesaurusConceptGroupLabel;
import fr.mcc.ginco.beans.ThesaurusConceptGroupType;
import fr.mcc.ginco.beans.ThesaurusFormat;
import fr.mcc.ginco.beans.ThesaurusOrganization;
import fr.mcc.ginco.beans.ThesaurusTerm;
import fr.mcc.ginco.beans.ThesaurusTermRole;
import fr.mcc.ginco.beans.ThesaurusType;
import fr.mcc.ginco.beans.ThesaurusVersionHistory;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for fr.mcc.ginco.exports.result.bean.GincoExportedThesaurus
 *
 * @author Diffblue Cover
 */

class GincoExportedThesaurusTest {

	@Test
	void factory() throws java.text.ParseException {
		GincoExportedThesaurus gincoExportedThesaurus = new GincoExportedThesaurus();
		HashMap<String, JaxbList<Alignment>> alignments =
			 new HashMap<String, JaxbList<Alignment>>();
		JaxbList<Alignment> x739 = new JaxbList<Alignment>();
		alignments.put("foo", x739);
		gincoExportedThesaurus.setAlignments(alignments);
		HashMap<String, JaxbList<AssociativeRelationship>> associativeRelationship1 =
			 new HashMap<String, JaxbList<AssociativeRelationship>>();
		JaxbList<AssociativeRelationship> x774 =
			 new JaxbList<AssociativeRelationship>();
		associativeRelationship1.put("foo", x774);
		gincoExportedThesaurus.setAssociativeRelationship(associativeRelationship1);
		ArrayList<SplitNonPreferredTerm> complexConcepts =
			 new ArrayList<SplitNonPreferredTerm>();
		SplitNonPreferredTerm splitNonPreferredTerm = new SplitNonPreferredTerm();
		splitNonPreferredTerm.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		splitNonPreferredTerm.setIdentifier("data");
		Language language1 = new Language();
		language1.setId("1234");
		language1.setPart1("foo");
		language1.setPrincipalLanguage(false);
		language1.setRefname("foo");
		language1.setTopLanguage(false);
		splitNonPreferredTerm.setLanguage(language1);
		splitNonPreferredTerm.setLexicalValue("value");
		splitNonPreferredTerm.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		splitNonPreferredTerm.setPreferredTerms(new HashSet<ThesaurusTerm>());
		splitNonPreferredTerm.setSource("foo");
		splitNonPreferredTerm.setStatus(1);
		Thesaurus thesaurus1 = new Thesaurus();
		thesaurus1.setArchived(false);
		thesaurus1.setContributor("foo");
		thesaurus1.setCoverage("foo");
		thesaurus1.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator1 = new ThesaurusOrganization();
		creator1.setEmail("info@diffblue.com");
		creator1.setHomepage("foo");
		creator1.setIdentifier(1);
		creator1.setName("Acme");
		thesaurus1.setCreator(creator1);
		thesaurus1.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus1.setDefaultTopConcept(false);
		thesaurus1.setDescription("some text");
		thesaurus1.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus1.setIdentifier("data");
		thesaurus1.setLang(new HashSet<Language>());
		thesaurus1.setPolyHierarchical(false);
		thesaurus1.setPublisher("foo");
		thesaurus1.setRelation("DE");
		thesaurus1.setRights("foo");
		thesaurus1.setSource("foo");
		thesaurus1.setSubject("foo");
		thesaurus1.setTitle("Mr");
		ThesaurusType type1 = new ThesaurusType();
		type1.setIdentifier(1);
		type1.setLabel("label");
		thesaurus1.setType(type1);
		thesaurus1.setVersions(new HashSet<ThesaurusVersionHistory>());
		splitNonPreferredTerm.setThesaurus(thesaurus1);
		complexConcepts.add(splitNonPreferredTerm);
		gincoExportedThesaurus.setComplexConcepts(complexConcepts);
		HashMap<String, JaxbList<NodeLabel>> conceptArrayLabels =
			 new HashMap<String, JaxbList<NodeLabel>>();
		JaxbList<NodeLabel> x839 = new JaxbList<NodeLabel>();
		conceptArrayLabels.put("foo", x839);
		gincoExportedThesaurus.setConceptArrayLabels(conceptArrayLabels);
		ArrayList<ThesaurusArray> conceptArrays1 = new ArrayList<ThesaurusArray>();
		ThesaurusArray thesaurusArray3 = new ThesaurusArray();
		thesaurusArray3.setConcepts(new HashSet<ThesaurusArrayConcept>());
		thesaurusArray3.setIdentifier("data");
		thesaurusArray3.setNotation("DE");
		thesaurusArray3.setOrdered(false);
		ThesaurusConcept superOrdinateConcept = new ThesaurusConcept();
		superOrdinateConcept.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		superOrdinateConcept.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		superOrdinateConcept.setConceptArrays(new HashSet<ThesaurusArray>());
		superOrdinateConcept.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		superOrdinateConcept.setIdentifier("data");
		superOrdinateConcept.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		superOrdinateConcept.setNotation("DE");
		superOrdinateConcept.setParentConcepts(new HashSet<ThesaurusConcept>());
		superOrdinateConcept.setRootConcepts(new HashSet<ThesaurusConcept>());
		superOrdinateConcept.setStatus(1);
		Thesaurus thesaurus2 = new Thesaurus();
		thesaurus2.setArchived(false);
		thesaurus2.setContributor("foo");
		thesaurus2.setCoverage("foo");
		thesaurus2.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus2.setCreator(new ThesaurusOrganization());
		thesaurus2.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus2.setDefaultTopConcept(false);
		thesaurus2.setDescription("some text");
		thesaurus2.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus2.setIdentifier("data");
		thesaurus2.setLang(new HashSet<Language>());
		thesaurus2.setPolyHierarchical(false);
		thesaurus2.setPublisher("foo");
		thesaurus2.setRelation("DE");
		thesaurus2.setRights("foo");
		thesaurus2.setSource("foo");
		thesaurus2.setSubject("foo");
		thesaurus2.setTitle("Mr");
		thesaurus2.setType(new ThesaurusType());
		thesaurus2.setVersions(new HashSet<ThesaurusVersionHistory>());
		superOrdinateConcept.setThesaurus(thesaurus2);
		superOrdinateConcept.setTopConcept(false);
		thesaurusArray3.setSuperOrdinateConcept(superOrdinateConcept);
		Thesaurus thesaurus3 = new Thesaurus();
		thesaurus3.setArchived(false);
		thesaurus3.setContributor("foo");
		thesaurus3.setCoverage("foo");
		thesaurus3.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator3 = new ThesaurusOrganization();
		creator3.setEmail("info@diffblue.com");
		creator3.setHomepage("foo");
		creator3.setIdentifier(1);
		creator3.setName("Acme");
		thesaurus3.setCreator(creator3);
		thesaurus3.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus3.setDefaultTopConcept(false);
		thesaurus3.setDescription("some text");
		thesaurus3.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus3.setIdentifier("data");
		thesaurus3.setLang(new HashSet<Language>());
		thesaurus3.setPolyHierarchical(false);
		thesaurus3.setPublisher("foo");
		thesaurus3.setRelation("DE");
		thesaurus3.setRights("foo");
		thesaurus3.setSource("foo");
		thesaurus3.setSubject("foo");
		thesaurus3.setTitle("Mr");
		ThesaurusType type3 = new ThesaurusType();
		type3.setIdentifier(1);
		type3.setLabel("label");
		thesaurus3.setType(type3);
		thesaurus3.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusArray3.setThesaurus(thesaurus3);
		conceptArrays1.add(thesaurusArray3);
		gincoExportedThesaurus.setConceptArrays(conceptArrays1);
		HashMap<String, JaxbList<ThesaurusConceptGroupLabel>> conceptGroupLabels =
			 new HashMap<String, JaxbList<ThesaurusConceptGroupLabel>>();
		JaxbList<ThesaurusConceptGroupLabel> x939 =
			 new JaxbList<ThesaurusConceptGroupLabel>();
		conceptGroupLabels.put("foo", x939);
		gincoExportedThesaurus.setConceptGroupLabels(conceptGroupLabels);
		ArrayList<ThesaurusConceptGroup> conceptGroups =
			 new ArrayList<ThesaurusConceptGroup>();
		ThesaurusConceptGroup thesaurusConceptGroup = new ThesaurusConceptGroup();
		ThesaurusConceptGroupType conceptGroupType = new ThesaurusConceptGroupType();
		conceptGroupType.setCode("DE");
		conceptGroupType.setLabel("label");
		conceptGroupType.setSkosLabel("label");
		thesaurusConceptGroup.setConceptGroupType(conceptGroupType);
		thesaurusConceptGroup.setConcepts(new HashSet<ThesaurusConcept>());
		thesaurusConceptGroup.setIdentifier("data");
		thesaurusConceptGroup.setIsDynamic(false);
		thesaurusConceptGroup.setNotation("DE");
		ThesaurusConcept parentConcept = new ThesaurusConcept();
		parentConcept.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		parentConcept.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		parentConcept.setConceptArrays(new HashSet<ThesaurusArray>());
		parentConcept.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		parentConcept.setIdentifier("data");
		parentConcept.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		parentConcept.setNotation("DE");
		parentConcept.setParentConcepts(new HashSet<ThesaurusConcept>());
		parentConcept.setRootConcepts(new HashSet<ThesaurusConcept>());
		parentConcept.setStatus(1);
		Thesaurus thesaurus4 = new Thesaurus();
		thesaurus4.setArchived(false);
		thesaurus4.setContributor("foo");
		thesaurus4.setCoverage("foo");
		thesaurus4.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus4.setCreator(new ThesaurusOrganization());
		thesaurus4.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus4.setDefaultTopConcept(false);
		thesaurus4.setDescription("some text");
		thesaurus4.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus4.setIdentifier("data");
		thesaurus4.setLang(new HashSet<Language>());
		thesaurus4.setPolyHierarchical(false);
		thesaurus4.setPublisher("foo");
		thesaurus4.setRelation("DE");
		thesaurus4.setRights("foo");
		thesaurus4.setSource("foo");
		thesaurus4.setSubject("foo");
		thesaurus4.setTitle("Mr");
		thesaurus4.setType(new ThesaurusType());
		thesaurus4.setVersions(new HashSet<ThesaurusVersionHistory>());
		parentConcept.setThesaurus(thesaurus4);
		parentConcept.setTopConcept(false);
		thesaurusConceptGroup.setParentConcept(parentConcept);
		Thesaurus thesaurus5 = new Thesaurus();
		thesaurus5.setArchived(false);
		thesaurus5.setContributor("foo");
		thesaurus5.setCoverage("foo");
		thesaurus5.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator5 = new ThesaurusOrganization();
		creator5.setEmail("info@diffblue.com");
		creator5.setHomepage("foo");
		creator5.setIdentifier(1);
		creator5.setName("Acme");
		thesaurus5.setCreator(creator5);
		thesaurus5.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus5.setDefaultTopConcept(false);
		thesaurus5.setDescription("some text");
		thesaurus5.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus5.setIdentifier("data");
		thesaurus5.setLang(new HashSet<Language>());
		thesaurus5.setPolyHierarchical(false);
		thesaurus5.setPublisher("foo");
		thesaurus5.setRelation("DE");
		thesaurus5.setRights("foo");
		thesaurus5.setSource("foo");
		thesaurus5.setSubject("foo");
		thesaurus5.setTitle("Mr");
		ThesaurusType type5 = new ThesaurusType();
		type5.setIdentifier(1);
		type5.setLabel("label");
		thesaurus5.setType(type5);
		thesaurus5.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusConceptGroup.setThesaurus(thesaurus5);
		conceptGroups.add(thesaurusConceptGroup);
		gincoExportedThesaurus.setConceptGroups(conceptGroups);
		HashMap<String, JaxbList<Note>> conceptNotes =
			 new HashMap<String, JaxbList<Note>>();
		JaxbList<Note> x1043 = new JaxbList<Note>();
		conceptNotes.put("foo", x1043);
		gincoExportedThesaurus.setConceptNotes(conceptNotes);
		HashMap<String, JaxbList<ConceptHierarchicalRelationship>> parentConceptRelationship =
			 new HashMap<String, JaxbList<ConceptHierarchicalRelationship>>();
		JaxbList<ConceptHierarchicalRelationship> x1074 =
			 new JaxbList<ConceptHierarchicalRelationship>();
		parentConceptRelationship.put("foo", x1074);
		gincoExportedThesaurus.setHierarchicalRelationship(parentConceptRelationship);
		HashMap<String, JaxbList<Note>> termNotes =
			 new HashMap<String, JaxbList<Note>>();
		JaxbList<Note> x1087 = new JaxbList<Note>();
		termNotes.put("foo", x1087);
		gincoExportedThesaurus.setTermNotes(termNotes);
		Thesaurus thesaurus6 = new Thesaurus();
		thesaurus6.setArchived(false);
		thesaurus6.setContributor("foo");
		thesaurus6.setCoverage("foo");
		thesaurus6.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator6 = new ThesaurusOrganization();
		creator6.setEmail("info@diffblue.com");
		creator6.setHomepage("foo");
		creator6.setIdentifier(1);
		creator6.setName("Acme");
		thesaurus6.setCreator(creator6);
		thesaurus6.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus6.setDefaultTopConcept(false);
		thesaurus6.setDescription("some text");
		thesaurus6.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus6.setIdentifier("data");
		thesaurus6.setLang(new HashSet<Language>());
		thesaurus6.setPolyHierarchical(false);
		thesaurus6.setPublisher("foo");
		thesaurus6.setRelation("DE");
		thesaurus6.setRights("foo");
		thesaurus6.setSource("foo");
		thesaurus6.setSubject("foo");
		thesaurus6.setTitle("Mr");
		ThesaurusType type6 = new ThesaurusType();
		type6.setIdentifier(1);
		type6.setLabel("label");
		thesaurus6.setType(type6);
		thesaurus6.setVersions(new HashSet<ThesaurusVersionHistory>());
		gincoExportedThesaurus.setThesaurus(thesaurus6);
		ArrayList<ThesaurusVersionHistory> versions7 =
			 new ArrayList<ThesaurusVersionHistory>();
		ThesaurusVersionHistory thesaurusVersionHistory =
			 new ThesaurusVersionHistory();
		thesaurusVersionHistory.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusVersionHistory.setIdentifier("data");
		thesaurusVersionHistory.setStatus(1);
		Thesaurus thesaurus7 = new Thesaurus();
		thesaurus7.setArchived(false);
		thesaurus7.setContributor("foo");
		thesaurus7.setCoverage("foo");
		thesaurus7.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator8 = new ThesaurusOrganization();
		creator8.setEmail("info@diffblue.com");
		creator8.setHomepage("foo");
		creator8.setIdentifier(1);
		creator8.setName("Acme");
		thesaurus7.setCreator(creator8);
		thesaurus7.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus7.setDefaultTopConcept(false);
		thesaurus7.setDescription("some text");
		thesaurus7.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus7.setIdentifier("data");
		thesaurus7.setLang(new HashSet<Language>());
		thesaurus7.setPolyHierarchical(false);
		thesaurus7.setPublisher("foo");
		thesaurus7.setRelation("DE");
		thesaurus7.setRights("foo");
		thesaurus7.setSource("foo");
		thesaurus7.setSubject("foo");
		thesaurus7.setTitle("Mr");
		ThesaurusType type8 = new ThesaurusType();
		type8.setIdentifier(1);
		type8.setLabel("label");
		thesaurus7.setType(type8);
		thesaurus7.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusVersionHistory.setThesaurus(thesaurus7);
		thesaurusVersionHistory.setThisVersion(false);
		thesaurusVersionHistory.setUserId("root");
		thesaurusVersionHistory.setVersionNote("1.0");
		versions7.add(thesaurusVersionHistory);
		gincoExportedThesaurus.setThesaurusVersions(versions7);
		ArrayList<CustomConceptAttributeType> conceptAttributeTypes =
			 new ArrayList<CustomConceptAttributeType>();
		CustomConceptAttributeType customConceptAttributeType =
			 new CustomConceptAttributeType();
		customConceptAttributeType.setExportable(false);
		customConceptAttributeType.setCode("DE");
		customConceptAttributeType.setIdentifier(1);
		Thesaurus thesaurus8 = new Thesaurus();
		thesaurus8.setArchived(false);
		thesaurus8.setContributor("foo");
		thesaurus8.setCoverage("foo");
		thesaurus8.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator9 = new ThesaurusOrganization();
		creator9.setEmail("info@diffblue.com");
		creator9.setHomepage("foo");
		creator9.setIdentifier(1);
		creator9.setName("Acme");
		thesaurus8.setCreator(creator9);
		thesaurus8.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus8.setDefaultTopConcept(false);
		thesaurus8.setDescription("some text");
		thesaurus8.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus8.setIdentifier("data");
		thesaurus8.setLang(new HashSet<Language>());
		thesaurus8.setPolyHierarchical(false);
		thesaurus8.setPublisher("foo");
		thesaurus8.setRelation("DE");
		thesaurus8.setRights("foo");
		thesaurus8.setSource("foo");
		thesaurus8.setSubject("foo");
		thesaurus8.setTitle("Mr");
		ThesaurusType type9 = new ThesaurusType();
		type9.setIdentifier(1);
		type9.setLabel("label");
		thesaurus8.setType(type9);
		thesaurus8.setVersions(new HashSet<ThesaurusVersionHistory>());
		customConceptAttributeType.setThesaurus(thesaurus8);
		customConceptAttributeType.setValue("value");
		conceptAttributeTypes.add(customConceptAttributeType);
		gincoExportedThesaurus.setConceptAttributeTypes(conceptAttributeTypes);
		HashMap<String, JaxbList<CustomConceptAttribute>> conceptAttributes =
			 new HashMap<String, JaxbList<CustomConceptAttribute>>();
		JaxbList<CustomConceptAttribute> x1263 =
			 new JaxbList<CustomConceptAttribute>();
		conceptAttributes.put("foo", x1263);
		gincoExportedThesaurus.setConceptAttributes(conceptAttributes);
		ArrayList<ThesaurusConcept> concepts3 = new ArrayList<ThesaurusConcept>();
		ThesaurusConcept thesaurusConcept = new ThesaurusConcept();
		thesaurusConcept.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		thesaurusConcept.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		thesaurusConcept.setConceptArrays(new HashSet<ThesaurusArray>());
		thesaurusConcept.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusConcept.setIdentifier("data");
		thesaurusConcept.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusConcept.setNotation("DE");
		thesaurusConcept.setParentConcepts(new HashSet<ThesaurusConcept>());
		thesaurusConcept.setRootConcepts(new HashSet<ThesaurusConcept>());
		thesaurusConcept.setStatus(1);
		Thesaurus thesaurus9 = new Thesaurus();
		thesaurus9.setArchived(false);
		thesaurus9.setContributor("foo");
		thesaurus9.setCoverage("foo");
		thesaurus9.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator10 = new ThesaurusOrganization();
		creator10.setEmail("info@diffblue.com");
		creator10.setHomepage("foo");
		creator10.setIdentifier(1);
		creator10.setName("Acme");
		thesaurus9.setCreator(creator10);
		thesaurus9.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus9.setDefaultTopConcept(false);
		thesaurus9.setDescription("some text");
		thesaurus9.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus9.setIdentifier("data");
		thesaurus9.setLang(new HashSet<Language>());
		thesaurus9.setPolyHierarchical(false);
		thesaurus9.setPublisher("foo");
		thesaurus9.setRelation("DE");
		thesaurus9.setRights("foo");
		thesaurus9.setSource("foo");
		thesaurus9.setSubject("foo");
		thesaurus9.setTitle("Mr");
		ThesaurusType type12 = new ThesaurusType();
		type12.setIdentifier(1);
		type12.setLabel("label");
		thesaurus9.setType(type12);
		thesaurus9.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusConcept.setThesaurus(thesaurus9);
		thesaurusConcept.setTopConcept(false);
		concepts3.add(thesaurusConcept);
		gincoExportedThesaurus.setConcepts(concepts3);
		ArrayList<CustomTermAttributeType> termAttributeTypes =
			 new ArrayList<CustomTermAttributeType>();
		CustomTermAttributeType customTermAttributeType =
			 new CustomTermAttributeType();
		customTermAttributeType.setCode("DE");
		customTermAttributeType.setIdentifier(1);
		Thesaurus thesaurus10 = new Thesaurus();
		thesaurus10.setArchived(false);
		thesaurus10.setContributor("foo");
		thesaurus10.setCoverage("foo");
		thesaurus10.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator11 = new ThesaurusOrganization();
		creator11.setEmail("info@diffblue.com");
		creator11.setHomepage("foo");
		creator11.setIdentifier(1);
		creator11.setName("Acme");
		thesaurus10.setCreator(creator11);
		thesaurus10.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus10.setDefaultTopConcept(false);
		thesaurus10.setDescription("some text");
		thesaurus10.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus10.setIdentifier("data");
		thesaurus10.setLang(new HashSet<Language>());
		thesaurus10.setPolyHierarchical(false);
		thesaurus10.setPublisher("foo");
		thesaurus10.setRelation("DE");
		thesaurus10.setRights("foo");
		thesaurus10.setSource("foo");
		thesaurus10.setSubject("foo");
		thesaurus10.setTitle("Mr");
		ThesaurusType type13 = new ThesaurusType();
		type13.setIdentifier(1);
		type13.setLabel("label");
		thesaurus10.setType(type13);
		thesaurus10.setVersions(new HashSet<ThesaurusVersionHistory>());
		customTermAttributeType.setThesaurus(thesaurus10);
		customTermAttributeType.setValue("value");
		termAttributeTypes.add(customTermAttributeType);
		gincoExportedThesaurus.setTermAttributeTypes(termAttributeTypes);
		HashMap<String, JaxbList<CustomTermAttribute>> termAttributes =
			 new HashMap<String, JaxbList<CustomTermAttribute>>();
		JaxbList<CustomTermAttribute> x1364 = new JaxbList<CustomTermAttribute>();
		termAttributes.put("foo", x1364);
		gincoExportedThesaurus.setTermAttributes(termAttributes);
		ArrayList<ThesaurusTerm> terms = new ArrayList<ThesaurusTerm>();
		ThesaurusTerm thesaurusTerm = new ThesaurusTerm();
		ThesaurusConcept concept5 = new ThesaurusConcept();
		concept5.setAssociativeRelationshipLeft(new HashSet<AssociativeRelationship>());
		concept5.setAssociativeRelationshipRight(new HashSet<AssociativeRelationship>());
		concept5.setConceptArrays(new HashSet<ThesaurusArray>());
		concept5.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		concept5.setIdentifier("data");
		concept5.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		concept5.setNotation("DE");
		concept5.setParentConcepts(new HashSet<ThesaurusConcept>());
		concept5.setRootConcepts(new HashSet<ThesaurusConcept>());
		concept5.setStatus(1);
		Thesaurus thesaurus11 = new Thesaurus();
		thesaurus11.setArchived(false);
		thesaurus11.setContributor("foo");
		thesaurus11.setCoverage("foo");
		thesaurus11.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus11.setCreator(new ThesaurusOrganization());
		thesaurus11.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus11.setDefaultTopConcept(false);
		thesaurus11.setDescription("some text");
		thesaurus11.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus11.setIdentifier("data");
		thesaurus11.setLang(new HashSet<Language>());
		thesaurus11.setPolyHierarchical(false);
		thesaurus11.setPublisher("foo");
		thesaurus11.setRelation("DE");
		thesaurus11.setRights("foo");
		thesaurus11.setSource("foo");
		thesaurus11.setSubject("foo");
		thesaurus11.setTitle("Mr");
		thesaurus11.setType(new ThesaurusType());
		thesaurus11.setVersions(new HashSet<ThesaurusVersionHistory>());
		concept5.setThesaurus(thesaurus11);
		concept5.setTopConcept(false);
		thesaurusTerm.setConcept(concept5);
		thesaurusTerm.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusTerm.setHidden(false);
		thesaurusTerm.setIdentifier("data");
		Language language10 = new Language();
		language10.setId("1234");
		language10.setPart1("foo");
		language10.setPrincipalLanguage(false);
		language10.setRefname("foo");
		language10.setTopLanguage(false);
		thesaurusTerm.setLanguage(language10);
		thesaurusTerm.setLexicalValue("value");
		thesaurusTerm.setModified(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurusTerm.setPrefered(false);
		ThesaurusTermRole role3 = new ThesaurusTermRole();
		role3.setCode("DE");
		role3.setDefaultRole(false);
		role3.setLabel("label");
		thesaurusTerm.setRole(role3);
		thesaurusTerm.setSource("foo");
		thesaurusTerm.setStatus(1);
		Thesaurus thesaurus12 = new Thesaurus();
		thesaurus12.setArchived(false);
		thesaurus12.setContributor("foo");
		thesaurus12.setCoverage("foo");
		thesaurus12.setCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		ThesaurusOrganization creator13 = new ThesaurusOrganization();
		creator13.setEmail("info@diffblue.com");
		creator13.setHomepage("foo");
		creator13.setIdentifier(1);
		creator13.setName("Acme");
		thesaurus12.setCreator(creator13);
		thesaurus12.setDate(new SimpleDateFormat("yyyy-MM-dd").parse("2010-12-31"));
		thesaurus12.setDefaultTopConcept(false);
		thesaurus12.setDescription("some text");
		thesaurus12.setFormat(new HashSet<ThesaurusFormat>());
		thesaurus12.setIdentifier("data");
		thesaurus12.setLang(new HashSet<Language>());
		thesaurus12.setPolyHierarchical(false);
		thesaurus12.setPublisher("foo");
		thesaurus12.setRelation("DE");
		thesaurus12.setRights("foo");
		thesaurus12.setSource("foo");
		thesaurus12.setSubject("foo");
		thesaurus12.setTitle("Mr");
		ThesaurusType type17 = new ThesaurusType();
		type17.setIdentifier(1);
		type17.setLabel("label");
		thesaurus12.setType(type17);
		thesaurus12.setVersions(new HashSet<ThesaurusVersionHistory>());
		thesaurusTerm.setThesaurus(thesaurus12);
		terms.add(thesaurusTerm);
		gincoExportedThesaurus.setTerms(terms);
		assertThat(gincoExportedThesaurus.getAlignments().get("foo"), sameInstance(x739));
		assertThat(gincoExportedThesaurus.getAssociativeRelationship().get("foo"), sameInstance(x774));
		assertThat(gincoExportedThesaurus.getComplexConcepts().size(), is(1));
		assertThat(gincoExportedThesaurus.getComplexConcepts().get(0), sameInstance(splitNonPreferredTerm));
		assertThat(gincoExportedThesaurus.getConceptArrayLabels().get("foo"), sameInstance(x839));
		assertThat(gincoExportedThesaurus.getConceptArrays().size(), is(1));
		assertThat(gincoExportedThesaurus.getConceptArrays().get(0), sameInstance(thesaurusArray3));
		assertThat(gincoExportedThesaurus.getConceptGroupLabels().get("foo"), sameInstance(x939));
		assertThat(gincoExportedThesaurus.getConceptGroups().size(), is(1));
		assertThat(gincoExportedThesaurus.getConceptGroups().get(0), sameInstance(thesaurusConceptGroup));
		assertThat(gincoExportedThesaurus.getConceptNotes().get("foo"), sameInstance(x1043));
		assertThat(gincoExportedThesaurus.getHierarchicalRelationship().get("foo"), sameInstance(x1074));
		assertThat(gincoExportedThesaurus.getTermNotes().get("foo"), sameInstance(x1087));
		assertThat(gincoExportedThesaurus.getThesaurus(), sameInstance(thesaurus6));
		assertThat(gincoExportedThesaurus.getThesaurusVersions().size(), is(1));
		assertThat(gincoExportedThesaurus.getThesaurusVersions().get(0), sameInstance(thesaurusVersionHistory));
		assertThat(gincoExportedThesaurus.getConceptAttributeTypes().size(), is(1));
		assertThat(gincoExportedThesaurus.getConceptAttributeTypes().get(0), sameInstance(customConceptAttributeType));
		assertThat(gincoExportedThesaurus.getConceptAttributes().get("foo"), sameInstance(x1263));
		assertThat(gincoExportedThesaurus.getConcepts().size(), is(1));
		assertThat(gincoExportedThesaurus.getConcepts().get(0), sameInstance(thesaurusConcept));
		assertThat(gincoExportedThesaurus.getTermAttributeTypes().size(), is(1));
		assertThat(gincoExportedThesaurus.getTermAttributeTypes().get(0), sameInstance(customTermAttributeType));
		assertThat(gincoExportedThesaurus.getTermAttributes().get("foo"), sameInstance(x1364));
		assertThat(gincoExportedThesaurus.getTerms().size(), is(1));
		assertThat(gincoExportedThesaurus.getTerms().get(0), sameInstance(thesaurusTerm));
	}
}
